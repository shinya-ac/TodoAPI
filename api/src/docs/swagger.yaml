definitions:
  task.CreateTaskParams:
    properties:
      content:
        example: 「達人に学ぶクリーンアーキテクチャp100~105」までを読む
        type: string
      title:
        example: 読書
        type: string
    required:
    - content
    - title
    type: object
  task.Task:
    properties:
      content:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  task.UpdateTaskParams:
    properties:
      content:
        example: 「達人に学ぶクリーンアーキテクチャp200~300」までを読む
        maxLength: 1000
        minLength: 1
        type: string
      status:
        example: Completed
        type: string
      title:
        example: 輪読会
        maxLength: 100
        minLength: 1
        type: string
    type: object
  task.createTaskResponse:
    properties:
      id:
        example: 4082ed31-263c-40ec-9d41-e9d274c6bca8
        type: string
    type: object
  task.deleteTaskResponse:
    properties:
      id:
        example: 4082ed31-263c-40ec-9d41-e9d274c6bca8
        type: string
    type: object
  task.getTaskResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/task.Task'
        type: array
      totalTasks:
        type: string
    type: object
  task.updateTaskResponse:
    properties:
      id:
        example: 4082ed31-263c-40ec-9d41-e9d274c6bca8
        type: string
    type: object
info:
  contact: {}
  description: RESTful API for TodoApp
  termsOfService: localhost:8080
  title: Todo API
  version: "1.0"
paths:
  /v1/tasks:
    get:
      description: 検索ワードとstatusの指定でフィルターをかけてTodoの一覧を取得する
      parameters:
      - default: 1
        description: ページ数
        in: query
        name: page
        type: integer
      - default: 100
        description: ページサイズ
        in: query
        name: pageSize
        type: integer
      - default: Pending
        description: Todoのステータス(Pending, InProgress, Completed)
        in: query
        name: status
        type: string
      - description: Todoのタイトルまたは説明文から検索する検索ワード
        in: query
        name: searchWord
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.getTaskResponse'
      security:
      - ApiKeyAuth: []
      summary: Task一覧を取得する
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: パラメーターから新規Todoを作成する
      parameters:
      - description: Task登録
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/task.CreateTaskParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/task.createTaskResponse'
      security:
      - ApiKeyAuth: []
      summary: Taskを登録する
      tags:
      - Task
  /v1/tasks/{id}:
    delete:
      description: 指定されたIDに合致するTodoを削除する
      parameters:
      - description: 削除するTodoを指定するid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.deleteTaskResponse'
      security:
      - ApiKeyAuth: []
      summary: Taskを削除する
      tags:
      - Task
    put:
      consumes:
      - application/json
      description: 指定されたIDに合致するTodoのタイトルやステータスを更新する
      parameters:
      - description: 更新するTodoを指定するid
        in: path
        name: id
        required: true
        type: string
      - description: Task更新
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/task.UpdateTaskParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.updateTaskResponse'
      security:
      - ApiKeyAuth: []
      summary: Taskを更新する
      tags:
      - Task
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Todo-API-Key
    type: apiKey
swagger: "2.0"
